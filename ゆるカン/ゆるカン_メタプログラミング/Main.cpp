/*
C++のマクロを使ったメタプログラミングとは？
C++のマクロを使ったメタプログラミングは、プリプロセッサディレクティブ（#define など）を活用して、コードの生成や条件分岐を行う手法です。コンパイル前にコードを変換・展開することで、テンプレートメタプログラミング（TMP）とは異なる形でコードの柔軟性を高められます。

マクロメタプログラミングの主な特徴
	コンパイル前のコード変換
		プリプロセッサの処理段階でコードを生成・置換する。
	条件付きコンパイル
		#ifdef や #if を使って特定の環境・設定でコードを有効化/無効化できる。
	簡易的なコード生成
		繰り返し同じパターンのコードを #define で簡潔に記述できる。
By ChatGPT

このサンプルは、1つ目の特徴を使って、
SerializeFieldマクロを使ったらメンバ変数が良い感じに取れそうになるクソコード。
*/


#include "Sample.h"

int main(void) {

	Hoge hoge;
	hoge.Func();

	getchar();
	return 0;
}